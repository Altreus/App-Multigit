#!/usr/bin/env perl

use strict;
use warnings;
use 5.014;

use Getopt::Long qw(:config gnu_getopt pass_through);
use App::Multigit;

my $workdir;
GetOptions(
    'help|h' => sub {
        say usage();
        exit 0;
    },
    'workdir=s' => \$workdir,
);

chdir $workdir;

my @futures = App::Multigit::each(
    sub {
        my ($future, $repo, $config) = @_;
        my $dir = $config->{dir};
        my $buf;

        return IO::Async::Process->new(
            command => [ qw(git -C), $dir, "branch", @ARGV ],
            # stdin?
            stdout => {
                into => \$buf,
            },
            on_finish => sub {
                chomp $buf;
                say $buf;

                $buf = "$dir:\n$buf";

                $future->done($buf);
            },
            on_exception => sub {
                my $errno = shift;
                say "$dir: error";
                $future->fail($errno);
            }
        );
    }
);

say for grep $_, sort Future->needs_all(@futures)->get;

sub usage {
<<EOU;
Usage:
    mg branch [argv]

    Runs `git branch argv` on each repository. See `git help branch`.

    With no arguments, therefore, this just lists the branches in each
    repository.
EOU
}
